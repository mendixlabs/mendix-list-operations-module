// This file was generated by Mendix Studio Pro.
//
// WARNING: Only the following code will be retained when actions are regenerated:
// - the import list
// - the code between BEGIN USER CODE and END USER CODE
// - the code between BEGIN EXTRA CODE and END EXTRA CODE
// Other code you write will be lost the next time you deploy the project.
// Special characters, e.g., é, ö, à, etc. are supported in comments.

package objectlistoperations.actions;

import java.util.List;
import com.mendix.systemwideinterfaces.core.IContext;
import com.mendix.systemwideinterfaces.core.IMendixObject;
import com.mendix.webui.CustomJavaAction;
import objectlistoperations.impl.Sorting;
import objectlistoperations.impl.SortingValidation;
import objectlistoperations.impl.SortingValidation.ValidationFeedback;

/**
 * This java action takes a list of objects and 'santizes' their data for sorting. All logic is applied to the input attribute. which should be used to determine the sorting order.
 * The objects are ordered based on any exisiting values (nulls are placed at the end of the list). Then, the value of SortOrderAttribute is set to value of "Starting index" parameter for the first object, +1 for the second, etc..
 * The result is a clean set of values for the list, meaning they are now in a format which can be used by the other sorting actions.
 * Commits changed objects if "Commit" parameter set to "true".
 * Returns changed objects if any in a new list otherwise returns empty list.
 */
public class JA_List_SanitizeSorting extends CustomJavaAction<java.util.List<IMendixObject>>
{
	private java.util.List<IMendixObject> ProvidedList;
	private java.lang.String SortAttributeName;
	private java.lang.Boolean Commit;
	private java.lang.Long StartingIndex;

	public JA_List_SanitizeSorting(IContext context, java.util.List<IMendixObject> ProvidedList, java.lang.String SortAttributeName, java.lang.Boolean Commit, java.lang.Long StartingIndex)
	{
		super(context);
		this.ProvidedList = ProvidedList;
		this.SortAttributeName = SortAttributeName;
		this.Commit = Commit;
		this.StartingIndex = StartingIndex;
	}

	@java.lang.Override
	public java.util.List<IMendixObject> executeAction() throws Exception
	{
		// BEGIN USER CODE
		IContext context = this.getContext();
		
		ValidationFeedback Validation = SortingValidation.performSanitizingValidation(ProvidedList, context, SortAttributeName, Commit, StartingIndex);
		if (!Validation.Valid) {
			throw new Exception(Validation.ValidationMessage);
		}
		
		List<IMendixObject> resultList = Sorting.listSanitize(ProvidedList, context, SortAttributeName, Commit, StartingIndex);
		
		return resultList;
		// END USER CODE
	}

	/**
	 * Returns a string representation of this action
	 */
	@java.lang.Override
	public java.lang.String toString()
	{
		return "JA_List_SanitizeSorting";
	}

	// BEGIN EXTRA CODE
	// END EXTRA CODE
}
